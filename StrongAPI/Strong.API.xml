<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Strong.API</name>
    </assembly>
    <members>
        <member name="M:Strong.API.Controllers.AccountController.Login(System.String,System.String,System.String,System.String)">
            <summary>
            获取用户信息 
            </summary>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="T:Strong.API.Controllers.WeatherForecastController">
            <summary>
            测试接口
            </summary>
        </member>
        <member name="M:Strong.API.Controllers.WeatherForecastController.#ctor(Microsoft.Extensions.Logging.ILogger{Strong.API.Controllers.WeatherForecastController})">
            <summary>
            构造函数注入日志类
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Strong.API.Controllers.WeatherForecastController.Get">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Strong.API.Controllers.WeatherForecastController.GetB">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Strong.API.Controllers.WeatherForecastController.GetC">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Strong.API.Filter.ActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            方法前记录日志
            </summary>
            <param name="context"></param>
        </member>
        <member name="F:Strong.API.Filter.GlobalRoutePrefixFilter._centralPrefix">
            <summary>
            定义一个路由前缀变量
            </summary>
        </member>
        <member name="T:Strong.API.Program">
            <summary>
            程序入口
            </summary>
        </member>
        <member name="M:Strong.API.Program.Main(System.String[])">
            <summary>
            入口方法
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Strong.API.Program.CreateHostBuilder(System.String[])">
            <summary>
            创建Web服务器
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Strong.API.Startup">
            <summary>
            入口配置
            </summary>
        </member>
        <member name="P:Strong.API.Startup.ApiName">
            <summary>
            API名称
            </summary>
        </member>
        <member name="M:Strong.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Strong.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            用于注册services服务（第三方，EF，identity等）到容器中，使Configure可以使用这些服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Strong.API.Startup.RoutePrefix">
            <summary>
            路由变量前缀配置
            </summary>
        </member>
        <member name="F:Strong.API.Startup.RoutePrefix.Name">
            <summary>
            前缀名
            如果不需要，尽量留空，不要修改
            除非一定要在所有的 api 前统一加上特定前缀
            </summary>
        </member>
        <member name="M:Strong.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Strong.Entities.Seed.MyContext,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            用于配置整个HTTP请求的流程
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
